---
# This playbook uninstalls splunk enterprise or splunk universal forwarder

- name: check for splunk systemd unit file {{splunk_service_name}}.service
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  stat:
    path: "{{splunk_service_name}}.service"
  register: check_systemd_unit_file
  when: use_systemctl == true and use_splunk_systemd|default(false) == true

- name: stop and disable splunk service
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  with_items:
    - "{{splunk_service_name}}.service"
  when: use_systemctl == true and use_splunk_systemd|default(false) == true

- name: stop and disable {{splunk_service_name}} service
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  service:
    name: "{{splunk_service_name}}.service"
    state: stopped
    enabled: no
  when: use_systemctl == true and use_splunk_systemd|default(false) == true and check_systemd_unit_file.stat.exists == true

- name: remove init.d scripts
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
    - splunk_remove_init
  include_tasks: remove_init_and_ulimit.yml

- name: check for thp service file
  stat:
    path: "/etc/systemd/system/disable-thp.service"
  register: check_thp_systemd

- name: stop and disable thp service
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  service:
    name: "disable-thp.service"
    state: stopped
    enabled: no
  when: use_systemctl == true and check_thp_systemd.stat.exists == true

- name: check if splunk is running
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  shell: "pgrep splunkd"
  register: grep_result
  check_mode: no
  failed_when: "grep_result.rc > 1"
  changed_when: "grep_result.rc != 0"

- name: stop splunk
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  shell: "{{splunk_home}}/bin/splunk stop"
  become: yes
  become_user: "{{ splunk_user }}"
  when: grep_result.rc == 0

- name: disable boot-start
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  command: "{{ splunk_home }}/bin/splunk disable boot-start"
  when: use_systemctl == true and use_splunk_systemd|default(false) == true

- name: remove systemd files
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  file:
    path: /etc/systemd/system/{{item}}
    state: absent
  with_items:
    - "{{splunk_service_name}}.service"
    - "disable-thp.service"

- name: commit changes to systemctl
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  command: systemctl daemon-reload
  when: use_systemctl == true

- name: "remove /etc/sudoers.d/splunk"
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  file:
    path: "/etc/sudoers.d/splunk"
    state: absent

- name: "remove /etc/polkit-1/rules.d/60-{{splunk_service_name}}.rules"
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  file:
    path: "/etc/polkit-1/rules.d/10-{{splunk_service_name}}.rules"
    state: absent

# Find all directories to remove, except lost+found
- name: find files to remove all under {{splunk_home}}/
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  find:
    paths: "{{splunk_home}}/"
    file_type: any
    recurse: no
    patterns: '.*(?<!lost\+found)$'
    use_regex: yes
  register: files_to_delete

# Remove as user splunk to prevent removing mounted directories
- name: remove all under {{splunk_home}}/
  tags:
    - splunk
    - splunk_software
    - splunk_uninstall
  file:
    path: "{{item.path}}"
    state: absent
  with_items: "{{ files_to_delete.files }}"
  become: yes
  become_user: "{{ splunk_user }}"

# Do not remove this directory, since a mounted filesystem could be inside
#  tags:
#    - splunk
#    - splunk_software
#    - splunk_uninstall
#- name: "remove {{ splunk_home }}"
#  file:
#    path: "{{ splunk_home }}"
#    state: absent
